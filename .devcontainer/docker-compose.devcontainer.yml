version: '3.8'

services:
  app:
    # Override for devcontainer-specific configurations
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - XDEBUG_MODE=develop,debug
      - XDEBUG_CONFIG=client_host=host.docker.internal client_port=9003 start_with_request=yes
      - PHP_IDE_CONFIG=serverName=laravel
      - COMPOSER_ALLOW_SUPERUSER=1
      - COMPOSER_NO_INTERACTION=1
    
    # Additional volumes for development tools
    volumes:
      # Mount devcontainer scripts and configuration
      - ./.devcontainer:/workspace/.devcontainer:cached
      - ./.vscode:/var/www/html/.vscode:cached
      
      # Mount shell configuration
      - devcontainer_zsh:/home/www-data/.oh-my-zsh
      - devcontainer_home:/home/www-data
      
      # Mount Docker socket for Docker-in-Docker
      - /var/run/docker.sock:/var/run/docker-host.sock
      
      # Additional development volumes
      - ~/.composer:/home/www-data/.composer:cached
    
    # Add capabilities for development and debugging
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    
    # Keep container running for devcontainer
    command: sleep infinity
    
    # Security options for development
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    
    # Add labels for better organization
    labels:
      - "devcontainer.project=career-center"
      - "devcontainer.service=app"
      - "devcontainer.role=primary"
    
    # Development-specific build context
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      target: devcontainer
    
    # Override image name for devcontainer
    image: career-center:devcontainer

  # Development-specific database overrides
  db:
    # Add development-specific environment variables
    environment:
      - MYSQL_DATABASE=career_center_dev
      - MYSQL_USER=career_user
      - MYSQL_PASSWORD=dev_password
      - MYSQL_ROOT_PASSWORD=root_password
    
    # Add database initialization for development
    volumes:
      - db_data_dev:/var/lib/mysql
      - ../docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      # Mount development SQL scripts if they exist
      - ../database/dev-init:/docker-entrypoint-initdb.d:ro
    
    # Add health check
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      timeout: 5s
      retries: 10
      start_period: 30s
      interval: 10s
    
    # Add labels
    labels:
      - "devcontainer.project=career-center"
      - "devcontainer.service=database"

  # Redis overrides for development
  redis:
    # Add health check
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
      start_period: 10s
      interval: 30s
    
    labels:
      - "devcontainer.project=career-center"
      - "devcontainer.service=cache"

  # Nginx overrides for development
  nginx:
    # Development-specific nginx configuration
    volumes:
      - ../public:/var/www/html/public:ro
      - ../docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../docker/nginx/sites/default.conf:/etc/nginx/sites-available/default.conf:ro
      - nginx_logs:/var/log/nginx
    
    # Add health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      timeout: 3s
      retries: 3
      start_period: 10s
      interval: 30s
    
    labels:
      - "devcontainer.project=career-center"
      - "devcontainer.service=webserver"

  # MailHog overrides for development
  mailhog:
    # Add health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8025"]
      timeout: 3s
      retries: 3
      start_period: 5s
      interval: 30s
    
    labels:
      - "devcontainer.project=career-center"
      - "devcontainer.service=mail"

  # Add a development utilities container
  dev-utils:
    image: alpine:latest
    container_name: career-center-dev-utils
    volumes:
      - ../:/workspace:cached
    command: tail -f /dev/null
    labels:
      - "devcontainer.project=career-center"
      - "devcontainer.service=utilities"
    profiles:
      - dev-utils

# Additional volumes for devcontainer
volumes:
  # Preserve devcontainer-specific data
  devcontainer_zsh:
    driver: local
  devcontainer_home:
    driver: local
  nginx_logs:
    driver: local
  
  # Reuse existing volumes from main compose
  db_data_dev:
    external: true
  redis_data_dev:
    external: true
  vendor_volume:
    external: true
  node_modules_volume:
    external: true
